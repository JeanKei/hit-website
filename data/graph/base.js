export const base = [
    {'name': 'DRUGBANK', 'query': `MATCH (n)-[r]->(m) WHERE n.database = "DRUGBANK" AND m.database = "DRUGBANK" RETURN { id: id(n), label: head(labels(n)), caption: n.name, category: n.category } as source, { id: id(m), label: head(labels(m)), caption: m.name, category: m.category } as target, type(r) as relationType LIMIT $limit`},
    {'name': 'GNBR', 'query': `MATCH (n)-[r]->(m) WHERE n.database = "GNBR" AND m.database = "GNBR" RETURN { id: id(n), label: head(labels(n)), caption: n.name, category: n.category } as source, { id: id(m), label: head(labels(m)), caption: m.name, category: m.category } as target, type(r) as relationType LIMIT $limit`},
    {'name': 'Hetionet', 'query': `MATCH (n)-[r]->(m) WHERE n.database = "Hetionet" AND m.database = "Hetionet" RETURN { id: id(n), label: head(labels(n)), caption: n.name, category: n.category } as source, { id: id(m), label: head(labels(m)), caption: m.name, category: m.category } as target, type(r) as relationType LIMIT $limit`},
    {'name': 'STRING', 'query': `MATCH (n)-[r]->(m) WHERE n.database = "STRING" AND m.database = "STRING" RETURN { id: id(n), label: head(labels(n)), caption: n.name, category: n.category } as source, { id: id(m), label: head(labels(m)), caption: m.name, category: m.category } as target, type(r) as relationType LIMIT $limit`},
    {'name': 'INTACT', 'query': `MATCH (n)-[r]->(m) WHERE n.database = "INTACT" AND m.database = "INTACT" RETURN { id: id(n), label: head(labels(n)), caption: n.name, category: n.category } as source, { id: id(m), label: head(labels(m)), caption: m.name, category: m.category } as target, type(r) as relationType LIMIT $limit`},
    {'name': 'DGIDB', 'query': `MATCH (n)-[r]->(m) WHERE n.database = "DGIDB" AND m.database = "DGIDB" RETURN { id: id(n), label: head(labels(n)), caption: n.name, category: n.category } as source, { id: id(m), label: head(labels(m)), caption: m.name, category: m.category } as target, type(r) as relationType LIMIT $limit`},
    {'name': 'bioarx', 'query': `MATCH (n)-[r]->(m) WHERE n.database = "bioarx" AND m.database = "bioarx" RETURN { id: id(n), label: head(labels(n)), caption: n.name, category: n.category } as source, { id: id(m), label: head(labels(m)), caption: m.name, category: m.category } as target, type(r) as relationType LIMIT $limit`},
    {'name': 'Disease-Ontology', 'query': `MATCH (n)-[r]->(m) WHERE n.database = "Disease-Ontology" AND m.database = "Disease-Ontology" RETURN { id: id(n), label: head(labels(n)), caption: n.name, category: n.category } as source, { id: id(m), label: head(labels(m)), caption: m.name, category: m.category } as target, type(r) as relationType LIMIT $limit`},
    {'name': 'GO', 'query': `MATCH (n)-[r]->(m) WHERE n.database = "GO" AND m.database = "GO" RETURN { id: id(n), label: head(labels(n)), caption: n.name, category: n.category } as source, { id: id(m), label: head(labels(m)), caption: m.name, category: m.category } as target, type(r) as relationType LIMIT $limit`},
  ];
